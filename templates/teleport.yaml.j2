#jinja2:lstrip_blocks: True
---
version: {{ teleport_configuration_version }}

teleport:
  nodename: {{ teleport_nodename }}

  data_dir: {{ teleport_data_dir }}

  auth_token: {{ teleport_auth_token }}
  auth_servers:
  {% for auth_server in teleport_auth_servers %}
    - {{ auth_server }}
  {% endfor %}

  connection_limits:
      max_connections: 1000
      max_users: 250

  log:
    output: {{ teleport_log_path }}
    severity: {{ teleport_log_level }}
    format:
      output: text
      extra_fields: [level, timestamp, component, caller]

  storage:
    type: {{ teleport_storage_type }}
    audit_events_uri: ['file:///var/lib/teleport/log']
    {% if teleport_storage_type == "DynamoDB" %}
    continuous_backups: {{ teleport_dynamodb_continuous_backups }}
    auto_scaling:  {{ teleport_dynamodb_auto_scaling }}
    {% endif %}

auth_service:
{% if teleport_auth_enabled == true %}
  enabled: "yes"
  cluster_name: {{ teleport_auth_cluster_name }}
  {% if teleport_configuration_version == "v2" %}
  proxy_listener_mode: {{ teleport_proxy_listener_mode }}
  {% endif %}
  authentication:
    type: local
    second_factor: {{ teleport_auth_second_factor }}
{% if teleport_auth_second_factor == "u2f" %}
    u2f:
      app_id: {{ teleport_u2f_app_id }}
      facets:
      {% for facet in teleport_u2f_facets %}
        - {{ facet }}
      {% endfor %}
{% endif %}
  listen_addr: {{ teleport_auth_listen_address }}

{% if teleport_auth_tokens_node|length > 0 or teleport_auth_tokens_proxy|length > 0 or teleport_auth_tokens_auth|length > 0 %}
  tokens:
  {% for token in teleport_auth_tokens_node %}
    - "node:{{ token }}"
  {% endfor %}
  {% for token in teleport_auth_tokens_proxy %}
    - "proxy:{{ token }}"
  {% endfor %}
  {% for token in teleport_auth_tokens_auth %}
    - "auth:{{ token }}"
  {% endfor %}
{% endif %}

  session_recording: {{ teleport_session_recording }}
  {% if teleport_session_recording == "proxy" %}
  proxy_checks_host_keys: {{ teleport_proxy_checks_host_keys }}
  {% endif %}

  client_idle_timeout: {{ teleport_client_idle_timeout }}

  {% else %}
  enabled: "no"
  {% endif %}

ssh_service:
{% if teleport_ssh_enabled == true %}
  enabled: "yes"
  listen_addr: {{ teleport_ssh_listen_address }}
  labels:
    group: {{ teleport_ssh_labels }}
  {% if teleport_ssh_additional_labels|length > 0 %}
  {% for label,value in teleport_ssh_additional_labels.items() %}
    {{ label }}: {{ value }}
  {% endfor %}
  {% endif %}
{% else %}
  enabled: "no"
{% endif %}

proxy_service:
{% if teleport_proxy_enabled == true %}
  enabled: "yes"
  web_listen_addr: {{ teleport_proxy_web_listen_address }}
  public_addr: {{ teleport_proxy_web_fqdn }}:443
  {% if teleport_configuration_version == "v1" or teleport_proxy_listener_mode == "separate" %}
  listen_addr: {{ teleport_proxy_listen_address }} 
  tunnel_listen_addr: {{ teleport_proxy_tunnel_listen_address }}
  {% endif %}
  {% if teleport_proxy_acme_enabled == true %}
  # Get an automatic certificate from Letsencrypt.org using ACME via 
  # TLS_ALPN-01 challenge.
  # When using ACME, the cluster name must match the 'public_addr' of 
  # Teleport and the 'proxy_service' must be publicly accessible over port 
  # 443.
  acme:
    enabled: "yes"
    email: {{ teleport_proxy_acme_email }}
  {% endif %}
{% else %}
  enabled: "no"
{% endif %}
